
<h1 class="sectionedit1" id="week_2">Week 2</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Week 2" [1-22] -->
<h2 class="sectionedit2" id="command_line_interface">Command Line Interface</h2>
<div class="level2">

<p>
<a href="https://dl.dropboxusercontent.com/u/1529935/data-science/CommandLineInterface.pdf" class="urlextern" title="https://dl.dropboxusercontent.com/u/1529935/data-science/CommandLineInterface.pdf"  rel="nofollow">PDF</a>
 <br/>

</p>

<p>
<strong>What&#039;s it used for?</strong> <br/>

</p>
<ul>
<li class="level1"><div class="li"> Navigate folders</div>
</li>
<li class="level1"><div class="li"> Create/Edit files, folders and programs</div>
</li>
<li class="level1"><div class="li"> Run programs</div>
</li>
</ul>

<p>
<strong>Basics of Directories</strong>
</p>
<ul>
<li class="level1"><div class="li"> Directory is just another name for folder</div>
</li>
<li class="level1"><div class="li"> Directories are organized like a tree</div>
</li>
<li class="level1"><div class="li"> Directories can be inside another directory</div>
</li>
<li class="level1"><div class="li"> Directories can be navigated with the CLI</div>
</li>
<li class="level1"><div class="li"> The directory that&#039;s up is the directory that contains the current one</div>
</li>
</ul>

<p>
<strong>Special Directories</strong>
</p>
<ul>
<li class="level1"><div class="li"> / indicates root</div>
</li>
<li class="level1"><div class="li"> ~ indicates home</div>
</li>
</ul>

<p>
<strong>CLI Basics</strong>
</p>
<ul>
<li class="level1"><div class="li"> CLI has a prompt which (usually) contains name of computer, followed by username, followed by $</div>
</li>
<li class="level1"><div class="li"> When CLI is opened, it starts in home directory</div>
</li>
<li class="level1"><div class="li"> Current directory in CLI is called <strong>Working Directory</strong></div>
</li>
</ul>

<p>
<strong>Command Structure</strong>
</p>
<ul>
<li class="level1"><div class="li"> CLI recipe: command flags arguments</div>
</li>
<li class="level1"><div class="li"> Flags are options we give the command to trigger certain behaviors</div>
</li>
<li class="level1"><div class="li"> Flags are preceded by the symbol -</div>
</li>
<li class="level1"><div class="li"> Arguments can be what the command is going to modify or other options for the command</div>
</li>
<li class="level1"><div class="li"> Some commands require no flags or arguments (eg: pwd)</div>
</li>
</ul>

<p>
<strong>Common CLI Commands</strong>
</p>
<div class="table sectionedit3"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign"> pwd    </th><td class="col1 leftalign"> (print working directory) Displays path to current directory          </td>
	</tr>
	<tr class="row1">
		<th class="col0 leftalign"> clear    </th><td class="col1 leftalign"> Clear commands written in current CLI window          </td>
	</tr>
	<tr class="row2">
		<th class="col0 leftalign"> ls    </th><td class="col1"> lists files and folders in given directory </td>
	</tr>
	<tr class="row3">
		<th class="col0 leftalign"> ls -a    </th><td class="col1 leftalign"> -a argument includes hidden items         </td>
	</tr>
	<tr class="row4">
		<th class="col0 leftalign"> ls -al    </th><td class="col1 leftalign"> -al argument includes all and shows details          </td>
	</tr>
	<tr class="row5">
		<th class="col0 leftalign"> cd    </th><td class="col1"> Change directory. Without argument takes to root</td>
	</tr>
	<tr class="row6">
		<th class="col0 leftalign"> cd ..   </th><td class="col1"> Change directory one above current</td>
	</tr>
	<tr class="row7">
		<th class="col0 leftalign"> mkdir   </th><td class="col1"> Make directory</td>
	</tr>
	<tr class="row8">
		<th class="col0 leftalign"> touch   </th><td class="col1"> Creates an empty file. Arg is file name</td>
	</tr>
	<tr class="row9">
		<th class="col0 leftalign"> cp   </th><td class="col1"> Copy. 1st arg is file, 2nd is path for copy</td>
	</tr>
	<tr class="row10">
		<th class="col0 leftalign"> cp -r  </th><td class="col1"> Copy directory contents</td>
	</tr>
	<tr class="row11">
		<th class="col0 leftalign"> rm   </th><td class="col1"> Remove. Deletes files</td>
	</tr>
	<tr class="row12">
		<th class="col0 leftalign"> rm -r   </th><td class="col1"> Remove directory</td>
	</tr>
	<tr class="row13">
		<th class="col0 leftalign"> rm -rf   </th><td class="col1"> Remove directory &amp; suppress warnings. Very stupid.</td>
	</tr>
	<tr class="row14">
		<th class="col0 leftalign"> mv   </th><td class="col1"> Move. Can also be used to rename</td>
	</tr>
	<tr class="row15">
		<th class="col0 leftalign"> echo   </th><td class="col1"> Print arguments</td>
	</tr>
	<tr class="row16">
		<th class="col0 leftalign"> date   </th><td class="col1"> Print today&#039;s date</td>
	</tr>
</table></div>
<!-- EDIT3 TABLE [1193-2038] -->
</div>
<!-- EDIT2 SECTION "Command Line Interface" [23-2039] -->
<h2 class="sectionedit4" id="git_commands">Git Commands</h2>
<div class="level2">

<p>
<a href="https://dl.dropboxusercontent.com/u/1529935/data-science/gitcommands.pdf" class="urlextern" title="https://dl.dropboxusercontent.com/u/1529935/data-science/gitcommands.pdf"  rel="nofollow">PDF</a>
 <br/>

</p>

<p>
<strong>What is Version Control?</strong>
</p>

<p>
Version control is a system that records changes to a file or set of files over time so that you can recall specific version slater. Git is an open source distributed version control system.
</p>

<p>
Configure git with this:
$git config -global user.name “Your Name Here”
$git config -global email.name “Your_Email@Example.com”
</p>

<p>
Confirm changes with this:
$ git config -list
</p>

<p>
 <br/>

<strong>ADDING</strong>
</p>
<div class="table sectionedit5"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign"> git add .    </th><td class="col1"> adds all new files in working directory </td>
	</tr>
	<tr class="row1">
		<th class="col0 leftalign"> git add -u    </th><td class="col1"> updates tracking for files that changed names or were deleted </td>
	</tr>
	<tr class="row2">
		<th class="col0 leftalign"> git add -A    </th><td class="col1"> updates tracking and adds all new files </td>
	</tr>
</table></div>
<!-- EDIT5 TABLE [2569-2769] -->
<p>
 <br/>

<strong>COMMITTING</strong>
</p>
<div class="table sectionedit6"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign"> git commit -m “message here”   </th><td class="col1"> Commit change to local repo </td>
	</tr>
</table></div>
<!-- EDIT6 TABLE [2792-2856] -->
<p>
 <br/>

<strong>PUSHING</strong>
</p>
<div class="table sectionedit7"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign"> git push   </th><td class="col1"> Commit change to remote repo </td>
	</tr>
</table></div>
<!-- EDIT7 TABLE [2876-2921] -->
<p>
 <br/>

<strong>BRANCHING</strong>
</p>
<div class="table sectionedit8"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign"> git checkout -b branchname   </th><td class="col1"> Create branch</td>
	</tr>
	<tr class="row1">
		<th class="col0 leftalign"> git branch   </th><td class="col1"> See current branch</td>
	</tr>
	<tr class="row2">
		<th class="col0 leftalign"> git checkout master   </th><td class="col1"> return to master branch</td>
	</tr>
</table></div>
<!-- EDIT8 TABLE [2942-3077] -->
<p>
<strong>PULLING</strong>
Pull requests are a feature of GitHub. A Pull Request is a way to merge changes back into another branch or repo.
</p>

</div>
<!-- EDIT4 SECTION "Git Commands" [2040-3205] -->
<h2 class="sectionedit9" id="markdown_commands">Markdown Commands</h2>
<div class="level2">
<div class="table sectionedit10"><table class="inline">
	<tr class="row0">
		<td class="col0"> .md file extension </td>
	</tr>
	<tr class="row1">
		<td class="col0"> ## 2nd level Heading</td>
	</tr>
	<tr class="row2">
		<td class="col0"> ### 3rd level heading</td>
	</tr>
	<tr class="row3">
		<td class="col0"> * Unordered list item </td>
	</tr>
</table></div>
<!-- EDIT10 TABLE [3238-3335] -->
</div>
<!-- EDIT9 SECTION "Markdown Commands" [3206-3337] -->
<h2 class="sectionedit11" id="installing_r_packages">Installing R Packages</h2>
<div class="level2">

<p>
Primary location is from CRAN. It&#039;s home to over 5,000 packages.
</p>

<p>
Find package info with available.packages() function.
</p>

<p>
Install using install.packages(“package name”). Note: This also downloads dependencies.
Install using install.packages(c(“package name”, “another”))
RStudio: Tools &gt; Install Packages
</p>

<p>
After installing, packages must be loaded into the library. Load using this: library(package_name)
search()
</p>

</div>
<!-- EDIT11 SECTION "Installing R Packages" [3338-] -->